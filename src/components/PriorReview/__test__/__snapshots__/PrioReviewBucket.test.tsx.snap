// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test PrioReviewBucket component Should renders PrioReviewBuckets correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
      },
      Object {
        "borderColor": "#848484",
        "borderRadius": 5,
        "borderWidth": 0.5,
        "marginBottom": "3%",
        "marginTop": 5,
        "paddingBottom": "8%",
        "paddingTop": "4%",
        "width": "90%",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#fff",
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "data": Array [
              Object {
                "_id": "622605f8766c2b210fcc5890",
                "description": "",
                "goal_id": "61d024a2b4cda2847a224bdf",
                "priority": Object {
                  "importance": "yes",
                  "index": 0,
                  "tier": "highest",
                  "urgency": "yes",
                },
                "status": "open",
                "title": "Test1",
              },
              Object {
                "_id": "622605fd766c2b210fcc5891",
                "description": "",
                "goal_id": "61d024a2b4cda2847a224bdf",
                "priority": Object {
                  "importance": "yes",
                  "index": 0,
                  "tier": "highest",
                  "urgency": "yes",
                },
                "status": "open",
                "title": "Test2",
              },
            ],
            "prio": "highest",
            "title": "Highest priority",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={
        Array [
          0,
        ]
      }
      updateCellsBatchingPeriod={50}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                },
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "paddingBottom": "5%",
                  "paddingLeft": "6%",
                },
              ]
            }
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 32,
                  "width": 32,
                }
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#554F4F",
                  },
                  Object {
                    "fontFamily": "Lexend-SemiBold",
                    "fontSize": 16,
                    "paddingBottom": "5%",
                    "paddingLeft": "5%",
                    "paddingTop": "2%",
                    "textAlign": "left",
                  },
                ]
              }
            >
              Highest priority
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                },
                Object {
                  "alignItems": "center",
                  "borderColor": "#848484",
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 5,
                  "marginLeft": "7.5%",
                  "marginRight": "7.5%",
                  "marginTop": 5,
                  "paddingBottom": "3%",
                  "paddingLeft": "3%",
                  "paddingRight": "3%",
                  "paddingTop": "3%",
                  "width": "85%",
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#554F4F",
                  },
                  Object {
                    "fontFamily": "Lexend-Regular",
                    "fontSize": 14,
                  },
                ]
              }
            >
              Test1
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                },
                Object {
                  "alignItems": "center",
                  "borderColor": "#848484",
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 5,
                  "marginLeft": "7.5%",
                  "marginRight": "7.5%",
                  "marginTop": 5,
                  "paddingBottom": "3%",
                  "paddingLeft": "3%",
                  "paddingRight": "3%",
                  "paddingTop": "3%",
                  "width": "85%",
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#554F4F",
                  },
                  Object {
                    "fontFamily": "Lexend-Regular",
                    "fontSize": 14,
                  },
                ]
              }
            >
              Test2
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`Test PrioReviewBucket component Should renders PrioReviewBuckets correctly 2`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
      },
      Object {
        "borderColor": "#848484",
        "borderRadius": 5,
        "borderWidth": 0.5,
        "marginBottom": "3%",
        "marginTop": 5,
        "paddingBottom": "8%",
        "paddingTop": "4%",
        "width": "90%",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#fff",
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "data": Array [
              Object {
                "_id": "62260602766c2b210fcc5892",
                "description": "",
                "goal_id": "61d024a2b4cda2847a224bdf",
                "priority": Object {
                  "importance": "yes",
                  "index": 0,
                  "tier": "high",
                  "urgency": "no",
                },
                "status": "open",
                "title": "test3",
              },
              Object {
                "_id": "62260606766c2b210fcc5893",
                "description": "",
                "goal_id": "61d024a2b4cda2847a224bdf",
                "priority": Object {
                  "importance": "yes",
                  "index": 0,
                  "tier": "high",
                  "urgency": "no",
                },
                "status": "open",
                "title": "Test4",
              },
            ],
            "prio": "high",
            "title": "High priority",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={
        Array [
          0,
        ]
      }
      updateCellsBatchingPeriod={50}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                },
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "paddingBottom": "5%",
                  "paddingLeft": "6%",
                },
              ]
            }
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 32,
                  "width": 32,
                }
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#554F4F",
                  },
                  Object {
                    "fontFamily": "Lexend-SemiBold",
                    "fontSize": 16,
                    "paddingBottom": "5%",
                    "paddingLeft": "5%",
                    "paddingTop": "2%",
                    "textAlign": "left",
                  },
                ]
              }
            >
              High priority
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                },
                Object {
                  "alignItems": "center",
                  "borderColor": "#848484",
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 5,
                  "marginLeft": "7.5%",
                  "marginRight": "7.5%",
                  "marginTop": 5,
                  "paddingBottom": "3%",
                  "paddingLeft": "3%",
                  "paddingRight": "3%",
                  "paddingTop": "3%",
                  "width": "85%",
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#554F4F",
                  },
                  Object {
                    "fontFamily": "Lexend-Regular",
                    "fontSize": 14,
                  },
                ]
              }
            >
              test3
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                },
                Object {
                  "alignItems": "center",
                  "borderColor": "#848484",
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 5,
                  "marginLeft": "7.5%",
                  "marginRight": "7.5%",
                  "marginTop": 5,
                  "paddingBottom": "3%",
                  "paddingLeft": "3%",
                  "paddingRight": "3%",
                  "paddingTop": "3%",
                  "width": "85%",
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#554F4F",
                  },
                  Object {
                    "fontFamily": "Lexend-Regular",
                    "fontSize": 14,
                  },
                ]
              }
            >
              Test4
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`Test PrioReviewBucket component Should renders PrioReviewBuckets correctly 3`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#FDFCFC",
      },
      Object {
        "borderColor": "#848484",
        "borderRadius": 5,
        "borderWidth": 0.5,
        "marginBottom": "3%",
        "marginTop": 5,
        "paddingBottom": "8%",
        "paddingTop": "4%",
        "width": "90%",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#fff",
        },
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "flex-start",
          "paddingLeft": "6%",
        },
      ]
    }
  >
    <Image
      source={1}
      style={
        Object {
          "height": 30,
          "width": 30,
        }
      }
    />
    <Text
      style={
        Array [
          Object {
            "color": "#848484",
          },
          Object {
            "fontFamily": "Lexend-SemiBold",
            "fontSize": 16,
            "paddingLeft": "5%",
          },
        ]
      }
    >
      Mid priority
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#FDFCFC",
        },
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": "6%",
          "paddingTop": "12%",
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#848484",
          },
          Object {
            "fontFamily": "Lexend-Regular",
            "fontSize": 14,
          },
        ]
      }
    >
      No tasks in this list
    </Text>
  </View>
</View>
`;

exports[`Test PrioReviewBucket component Should renders PrioReviewBuckets correctly 4`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
      },
      Object {
        "borderColor": "#848484",
        "borderRadius": 5,
        "borderWidth": 0.5,
        "marginBottom": "3%",
        "marginTop": 5,
        "paddingBottom": "8%",
        "paddingTop": "4%",
        "width": "90%",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#fff",
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "data": Array [
              Object {
                "_id": "62260609766c2b210fcc5894",
                "description": "",
                "goal_id": "61d024a2b4cda2847a224bdf",
                "priority": Object {
                  "importance": "no",
                  "index": 0,
                  "tier": "low",
                  "urgency": "no",
                },
                "status": "open",
                "title": "test5",
              },
            ],
            "prio": "low",
            "title": "Low priority",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={
        Array [
          0,
        ]
      }
      updateCellsBatchingPeriod={50}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                },
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "paddingBottom": "5%",
                  "paddingLeft": "6%",
                },
              ]
            }
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 32,
                  "width": 32,
                }
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#554F4F",
                  },
                  Object {
                    "fontFamily": "Lexend-SemiBold",
                    "fontSize": 16,
                    "paddingBottom": "5%",
                    "paddingLeft": "5%",
                    "paddingTop": "2%",
                    "textAlign": "left",
                  },
                ]
              }
            >
              Low priority
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                },
                Object {
                  "alignItems": "center",
                  "borderColor": "#848484",
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 5,
                  "marginLeft": "7.5%",
                  "marginRight": "7.5%",
                  "marginTop": 5,
                  "paddingBottom": "3%",
                  "paddingLeft": "3%",
                  "paddingRight": "3%",
                  "paddingTop": "3%",
                  "width": "85%",
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#554F4F",
                  },
                  Object {
                    "fontFamily": "Lexend-Regular",
                    "fontSize": 14,
                  },
                ]
              }
            >
              test5
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
      </View>
    </RCTScrollView>
  </View>
</View>
`;
